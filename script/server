#!/usr/bin/env bash

ARGOCD_SERVER_PORT=${ARGOCD_SERVER_PORT:-8080}
ARGOCD_PORT_FORWARD_PID=0

info(){
    if [[ -z "$*" ]]; then
        echo
    else
        echo "[server] $*"
    fi
}

cleanup_func(){
    kill "${ARGOCD_PORT_FORWARD_PID}"
    info
    info "Done."
}

main(){
    local use_ngrok="${1:-}"

    if [[ "${use_ngrok}" == "ngrok" ]]; then
        if ! command -v ngrok > /dev/null; then
            info "ngrok not found, please install it."
            exit 1
        fi
    elif [[ -n "${use_ngrok}" ]]; then
        info "Unknown argumenet: ${use_ngrok}"
        exit 1
    fi

    info "Starting..."
    if [[ -n "${use_ngrok}" ]]; then
        info "   ... using ngrok"
    fi

    if ! command -v gtail &>/dev/null; then
        echo "Run script/bootstrap to get dependencies"
        exit 1
    fi

    # Cleanup on exit
    # shellcheck disable=SC2154
    trap "exit \$exit_code" INT TERM
    trap "exit_code=\$?; cleanup_func; kill 0" EXIT

    info "Using docker-desktop context"
    kubectl config use-context docker-desktop

    info "Setting default namespace to argocd"
    kubectl config set-context --current --namespace=argocd

    if pgrep -f 'port-forward.*argocd-server' > /dev/null; then
        info "Port-forwarding already running"
        ARGOCD_PORT_FORWARD_PID=$(pgrep -f 'port-forward.*argocd-server')
    else
        info "Starting port-forwarding to :${ARGOCD_SERVER_PORT}"
        kubectl port-forward -n argocd svc/argocd-server "${ARGOCD_SERVER_PORT}:80" > /dev/null &
        ARGOCD_PORT_FORWARD_PID=$!
    fi

    # Spawn a subprocess waiting for this process to exit, which calls our cleanup_func
    (gtail --pid $$ -f /dev/null; cleanup_func; kill 0) &

    if [[ -n "${use_ngrok}" ]]; then
        ngrok http https://localhost:8080 --host-header="localhost:8080"
        exit 0
    fi

    info "Opening ArgoCD in a browser..."
    open "http://127.0.0.1:${ARGOCD_SERVER_PORT}"

    export ARGOCD_OPTS='--port-forward-namespace argocd --port-forward --insecure'
    export GIT_REPO="https://github.com/shakefu/airflow-local"
    # shellcheck disable=SC2155
    export GIT_TOKEN="$(gh auth token)"

    info "Starting shell with environment"
    info "  ... exit the shell to end port-fowarding."
    exec "$SHELL"
}

main "$@"

